
def solution(scoville, K):
    answer = 0
    import heapq
    # scoville.sort()
    
    heapq.heapify(scoville)
    
    while scoville[0] < K  :  #min(scoville)<K 으로 할 때 효율성 때문에 안됨 그냥 인덱스로 접근하면 효율성 good
        if len(scoville) > 1:
            first=heapq.heappop(scoville)
            se=heapq.heappop(scoville)
            value = first+(se*2)
            answer+=1
            heapq.heappush(scoville,value)
        else :
            return -1
#     while  min(scoville) <= K  :
#         if len(scoville) >= 2:
#             first=scoville.pop(0)
#             se=scoville.pop(0)
#             value = first+(se*2)
#             answer+=1
#             scoville.append(value)
#             scoville.sort()
            
#         else:
#             return -1
            
        
        
        
    
    return answer
